//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RepoStarter.Resources.LicenseTemplates {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LicenseTemplates {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LicenseTemplates() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RepoStarter.Resources.LicenseTemplates.LicenseTemplates", typeof(LicenseTemplates).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apache License
        ///Version 2.0, January 2004
        ///http://www.apache.org/licenses/
        ///
        ///TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        ///
        ///1. Definitions.
        ///
        ///    &quot;License&quot; shall mean the terms and conditions for use, reproduction, and
        ///    distribution as defined by Sections 1 through 9 of this document.
        ///
        ///    &quot;Licensor&quot; shall mean the copyright owner or entity authorized by the
        ///    copyright owner that is granting the License.
        ///
        ///    &quot;Legal Entity&quot; shall mean the union of the acting entity and all other
        ///    entitie [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Apache {
            get {
                return ResourceManager.GetString("Apache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) {{ year }}, {{ organization }}
        ///
        ///All rights reserved.
        ///
        ///Redistribution and use in source and binary forms, with or without modification,
        ///are permitted provided that the following conditions are met:
        ///
        ///    * Redistributions of source code must retain the above copyright notice,
        ///      this list of conditions and the following disclaimer.
        ///    * Redistributions in binary form must reproduce the above copyright notice,
        ///      this list of conditions and the following disclaimer in the documentation
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Bsd3 {
            get {
                return ResourceManager.GetString("Bsd3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GNU GENERAL PUBLIC LICENSE
        ///                       Version 3, 29 June 2007
        ///
        /// Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///                            Preamble
        ///
        ///  The GNU General Public License is a free, copyleft license for
        ///software and other kinds of works.
        ///
        ///  The licenses for most software and other practical works are designed
        ///to take away your freedom to share  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Gpl3 {
            get {
                return ResourceManager.GetString("Gpl3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License
        ///
        ///Copyright (c) {{ year }} {{ organization }}
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The above copyright  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Mit {
            get {
                return ResourceManager.GetString("Mit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mozilla Public License, version 2.0
        ///
        ///1. Definitions
        ///
        ///    1.1. “Contributor”
        ///    means each individual or legal entity that creates, contributes to the
        ///    creation of, or owns Covered Software.
        ///
        ///    1.2. “Contributor Version”
        ///    means the combination of the Contributions of others (if any) used by a
        ///    Contributor and that particular Contributor’s Contribution.
        ///
        ///    1.3. “Contribution”
        ///    means Covered Software of a particular Contributor.
        ///
        ///    1.4. “Covered Software”
        ///    means Source Code Form to which  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Mpl {
            get {
                return ResourceManager.GetString("Mpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is free and unencumbered software released into the public domain.
        ///
        ///Anyone is free to copy, modify, publish, use, compile, sell, or
        ///distribute this software, either in source code form or as a compiled
        ///binary, for any purpose, commercial or non-commercial, and by any
        ///means.
        ///
        ///In jurisdictions that recognize copyright laws, the author or authors
        ///of this software dedicate any and all copyright interest in the
        ///software to the public domain. We make this dedication for the benefit
        ///of the public at large and [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Public {
            get {
                return ResourceManager.GetString("Public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is free and unencumbered software released into the public domain.
        ///
        ///Anyone is free to copy, modify, publish, use, compile, sell, or
        ///distribute this software, either in source code form or as a compiled
        ///binary, for any purpose, commercial or non-commercial, and by any
        ///means.
        ///
        ///In jurisdictions that recognize copyright laws, the author or authors
        ///of this software dedicate any and all copyright interest in the
        ///software to the public domain. We make this dedication for the benefit
        ///of the public at large and [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PublicDomain {
            get {
                return ResourceManager.GetString("PublicDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) {{ year }} {{ organization }}
        ///
        ///This software is provided &apos;as-is&apos;, without any express or implied
        ///warranty. In no event will the authors be held liable for any damages
        ///arising from the use of this software.
        ///
        ///Permission is granted to anyone to use this software for any purpose,
        ///including commercial applications, and to alter it and redistribute it
        ///freely, subject to the following restrictions:
        ///
        ///   1. The origin of this software must not be misrepresented; you must not
        ///   claim that you wrote the [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Zlib {
            get {
                return ResourceManager.GetString("Zlib", resourceCulture);
            }
        }
    }
}
